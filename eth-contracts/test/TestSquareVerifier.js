// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const SquareVerifier = artifacts.require('SquareVerifier');
const proof = require('../../zokrates/code/square/proof.json');

contract('SquareVerifier', (accounts) => {
  let contract;

  beforeEach(async () => {
    contract = await SquareVerifier.new({ from: accounts[0] });
    console.log(JSON.stringify(proof, null, 2));
  });

  it('test verification with correct proof', async () => {
    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    const result = await contract.verifyTx.call(
      proof.proof.A,
      proof.proof.A_p,
      proof.proof.B,
      proof.proof.B_p,
      proof.proof.C,
      proof.proof.C_p,
      proof.proof.H,
      proof.proof.K,
      proof.input
    );
    // console.log('result = ', JSON.stringify(result, null, 2));
    assert.equal(result, true);
  });

  // it('test verification with incorrect proof', () => {
  //   // Test verification with incorrect proof
  // });
});
